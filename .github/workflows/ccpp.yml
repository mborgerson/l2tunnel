name: C/C++ CI

on: [push, pull_request]

jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    env:
      BUILD_TAG:
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: sudo apt-get install -y libpcap-dev mingw-w64
    - name: Compile for Linux
      run: |
        export BUILD_TAG=build-$(date -u +'%y%m%d%H%M')-$(git log --format=%h -1)
        echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
        echo "Compiling for Linux"
        make l2tunnel
    - name: Cross-Compile for Windows
      run: |
        echo "Cross-compiling for Windows"
        wget https://nmap.org/npcap/dist/npcap-sdk-1.04.zip
        unzip -dnpcap npcap-sdk-1.04.zip
        make l2tunnel.exe.zip
    - name: Upload Build Artifact
      uses: actions/upload-artifact@master
      with:
        name: l2tunnel.exe.zip
        path: l2tunnel.exe.zip

    - name: Create Release
      if: github.event_name == 'push'
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.BUILD_TAG }}
        release_name: ${{ env.BUILD_TAG }}
        draft: false
        prerelease: false
    - name: Upload Release Assets
      if: github.event_name == 'push'
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./l2tunnel.exe.zip
        asset_name: l2tunnel.exe.zip
        asset_content_type: application/zip

  build_macos:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - name: Compile
        run: make
